// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders 1`] = `
<nav
  aria-label="main navigation"
  className="navbar"
  role="navigation"
>
  <div
    className="section"
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <div
      className="container"
    >
      <div
        className="navbar-brand"
      >
        <img
          src="/logo.png"
          style={
            Object {
              "height": 60,
            }
          }
        />
        <a
          className="navbar-item brand-name"
          href="https://brand-link"
        >
          Test App
        </a>
        <AzureAD
          provider={
            MsalAuthProvider {
              "UserAgentApplication": [Circular],
              "_actionQueue": Array [
                Object {
                  "type": "AAD_INITIALIZING",
                },
                Object {
                  "payload": "Unauthenticated",
                  "type": "AAD_AUTHENTICATED_STATE_CHANGED",
                },
                Object {
                  "type": "AAD_INITIALIZED",
                },
              ],
              "_loginType": 1,
              "_onAccountInfoHandlers": Set {},
              "_onAuthenticationStateHandlers": Set {},
              "_onErrorHandlers": Set {},
              "_parameters": Object {
                "scopes": Array [
                  "openid",
                  "user.read",
                ],
              },
              "authResponseCallback": [Function],
              "authenticationRedirectCallback": [Function],
              "authenticationState": "Unauthenticated",
              "authorityInstance": AadAuthority {
                "IsValidationEnabled": true,
                "canonicalAuthority": "https://login.microsoftonline.com/purple.onmicrosoft.com/",
                "canonicalAuthorityUrlComponents": Object {
                  "AbsolutePath": "/purple.onmicrosoft.com/",
                  "HostNameAndPort": "login.microsoftonline.com",
                  "PathSegments": Array [
                    "purple.onmicrosoft.com",
                  ],
                  "Protocol": "https:",
                },
              },
              "cacheStorage": AuthCache {
                "cacheLocation": "sessionStorage",
                "clientId": "3bc4e4c8-365a-494f-9344-ed26b3573a74",
                "rollbackEnabled": true,
              },
              "clientId": "3bc4e4c8-365a-494f-9344-ed26b3573a74",
              "config": Object {
                "auth": Object {
                  "authority": "https://login.microsoftonline.com/purple.onmicrosoft.com",
                  "clientId": "3bc4e4c8-365a-494f-9344-ed26b3573a74",
                  "navigateToLoginRequestUrl": true,
                  "postLogoutRedirectUri": [Function],
                  "redirectUri": "http://localhost",
                  "validateAuthority": true,
                },
                "cache": Object {
                  "cacheLocation": "sessionStorage",
                  "storeAuthStateInCookie": true,
                },
                "framework": Object {
                  "isAngular": false,
                  "protectedResourceMap": Map {},
                  "unprotectedResources": Array [],
                },
                "system": Object {
                  "loadFrameTimeout": 6000,
                  "logger": Logger {
                    "correlationId": "",
                    "level": 2,
                    "localCallback": null,
                    "piiLoggingEnabled": false,
                  },
                  "navigateFrameWait": 500,
                  "tokenRenewalOffsetSeconds": 300,
                },
              },
              "dispatchAction": [Function],
              "errorReceivedCallback": null,
              "getAccessToken": [Function],
              "getAccountInfo": [Function],
              "getAuthenticationParameters": [Function],
              "getError": [Function],
              "getIdToken": [Function],
              "handleAcquireTokenSuccess": [Function],
              "handleLoginFailed": [Function],
              "handleLoginSuccess": [Function],
              "inCookie": true,
              "initializeProvider": [Function],
              "logger": Logger {
                "correlationId": "",
                "level": 2,
                "localCallback": null,
                "piiLoggingEnabled": false,
              },
              "login": [Function],
              "loginToRefreshToken": [Function],
              "logout": [Function],
              "processLogin": [Function],
              "redirectCallbacksSet": true,
              "registerAcountInfoHandler": [Function],
              "registerAuthenticationStateHandler": [Function],
              "registerErrorHandler": [Function],
              "registerReduxStore": [Function],
              "setAccountInfo": [Function],
              "setAuthenticationParameters": [Function],
              "setAuthenticationState": [Function],
              "setError": [Function],
              "setLoginType": [Function],
              "telemetryManager": null,
              "tokenReceivedCallback": null,
              "unregisterAccountInfoHandler": [Function],
              "unregisterAuthenticationStateHandler": [Function],
              "unregisterErrorHandler": [Function],
            }
          }
          reduxStore={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <Component />
        </AzureAD>
      </div>
    </div>
    <div
      className="column"
    />
  </div>
</nav>
`;
